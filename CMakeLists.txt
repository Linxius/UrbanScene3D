cmake_minimum_required (VERSION 3.10)
PROJECT(evaluate)
set (CMAKE_CXX_STANDARD 17)

find_package(Boost REQUIRED filesystem serialization)
find_package(Eigen3 CONFIG REQUIRED)
include( ${EIGEN3_USE_FILE} ) 
find_package(OpenCV CONFIG REQUIRED)
find_package(CGAL CONFIG REQUIRED)
find_package(tinyxml2 CONFIG REQUIRED)
find_package(tinyply CONFIG REQUIRED)
find_package(tinyobjloader CONFIG REQUIRED)
find_package(embree 3 CONFIG REQUIRED)
find_package(glog CONFIG REQUIRED)
find_package(TBB CONFIG REQUIRED)
find_package(glm CONFIG REQUIRED)
find_package(Threads REQUIRED)
find_package(OpenMP REQUIRED)
if (OPENMP_FOUND)
    set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
    set (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
endif()

function(link_private arg)
    target_include_directories(${ARGV0} PRIVATE ${Boost_INCLUDE_DIRS})
    target_link_libraries(${ARGV0} PRIVATE  ${OpenCV_LIBRARIES})
    target_link_libraries(${ARGV0} PRIVATE Boost::filesystem Boost::serialization)
    target_link_libraries(${ARGV0}  PRIVATE CGAL::CGAL)
    target_link_libraries(${ARGV0}  PRIVATE tinyxml2::tinyxml2)
    target_link_libraries(${ARGV0}  PRIVATE glog::glog)
    target_link_libraries(${ARGV0} PRIVATE tinyply)
    target_link_libraries(${ARGV0} PRIVATE embree)
    target_link_libraries(${ARGV0}  PRIVATE tinyobjloader::tinyobjloader)
endfunction()

add_subdirectory(src)
add_subdirectory(test)